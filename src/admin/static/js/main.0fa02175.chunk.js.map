{"version":3,"sources":["lib/Backend.js","lib/Auth.js","components/Login.jsx","components/Title.jsx","components/Module.jsx","components/Install.jsx","components/Menu.jsx","components/HeaderUser.jsx","components/HeaderTop.jsx","components/form/Text.jsx","components/form/Textarea.jsx","components/Fields.jsx","lib/Utils.js","components/Add.jsx","components/Dashboard.jsx","components/Logout.jsx","components/App.jsx","App.js","serviceWorker.js","index.js"],"names":["Backend","endpoint","Object","classCallCheck","this","type","functionStr","parameters","console","log","url","paramStr","param","length","user","done","fail","request","username","password","axios","get","then","res","data","localStorage","setItem","JSON","stringify","Auth","createClass","key","value","window","_backend","login","getItem","path","includes","Login","_this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","_auth","state","setState","message","props","history","push","handleChange","target","HTMLInputElement","field","id","checked","prev_state","remember","react_default","a","createElement","className","onSubmit","onChange","Component","Title","title","breadcrumb","links","parse","name","map","object","i","Link","to","Template","installed","config","description","href","data-toggle","role","data-portlet","data-action","data-method","integrity","create","destroy","Install","components_Title","el","Module","Menu","_aside","modules","link_list","link_add","HeaderUser","data-hover","data-close-others","alt","src","height","HeaderTop","style","marginTop","components_HeaderUser","Text","undefined","Textarea","textareaClass","rows","data-height","data-lang","Fields","_editors","fields","form_Text","form_Textarea","RutkaUtils","match","params","json","getRecordI","Add","module","Utils","moduleId","moduleTitle","moduleConfig","title_name","action","method","encType","data-success","data-toastr-position","components_Fields","Dashboard","getTest","removeItem","Redirect","App","_this2","getModules","_this3","components_Menu","components_HeaderTop","Route","exact","component","Logout","render","components_Install","assign","components_Add","AppJS","isAuth","components_App","noAuthNeeded","location","pathname","Boolean","hostname","ReactDOM","BrowserRouter","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0fa02175.chunk.js","sourcesContent":["// @flow\r\n\r\n// axios ajax\r\nimport axios from 'axios';\r\n\r\n/**\r\n * Backend object to communicate with REST API.\r\n */\r\nclass Backend {\r\n\r\n    constructor(endpoint) {\r\n        this.endpoint = endpoint;\r\n    }\r\n\r\n    /**\r\n     * Return request string.\r\n     *\r\n     * @param {string} type\r\n     * @param {string} functionStr\r\n     * @param {json} parameters\r\n     */\r\n    request(type, functionStr, parameters) {\r\n        console.log(this.endpoint);\r\n        let url = this.endpoint + \"/\" + functionStr;\r\n        let paramStr = \"\";\r\n        for (let param in parameters) {\r\n            if (paramStr.length !== 0) paramStr += \"&\";\r\n            paramStr += param + \"=\" + parameters[param];\r\n        }\r\n        if (paramStr.length === 0) return url;\r\n        return url + \"?\" + paramStr;\r\n    }\r\n\r\n    /**\r\n     * Login user with user/password.\r\n     *\r\n     * @param {LoginUserObj} user Username, password and permanent login info.\r\n     */\r\n    login(user, done, fail) {\r\n        let url = this.request(\"GET\", \"login\", { user: user.username, password: user.password });\r\n        axios.get(url)\r\n            .then((res) => {\r\n                // check if user was authenticated\r\n                let data = res.data;\r\n\r\n                if (\"status\" in data) {\r\n                    console.log(\"Login failed!\");\r\n                    fail();\r\n                } else {\r\n                    localStorage.setItem(\"user\", JSON.stringify(data));\r\n                    console.log(\"Login OK!\");\r\n                    done();\r\n                }\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Get modules data.\r\n     *\r\n     * @param {function} done\r\n     * @param {function} fail\r\n     */\r\n    getModules(done, fail) {\r\n        let url = this.request(\"GET\", \"modules\");\r\n        axios.get(url)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                done(res.data);\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Test call to proxied API server, which is available in the /api/* URL.\r\n     *\r\n     * @param {function} done\r\n     * @param {function} fail\r\n     */\r\n    getTest(done, fail) {\r\n        let url = \"/api/index.html\";\r\n        axios.get(url)\r\n            .then(res => {\r\n                done(res.data);\r\n            })\r\n    }\r\n}\r\n\r\nexport default Backend;","export class Auth {\r\n\r\n    login(user, done, fail) {\r\n        window._backend.login(user, done, fail);\r\n    }\r\n\r\n    isAuth() {\r\n        if (localStorage.getItem(\"user\")) return true;\r\n        return false;\r\n    }\r\n\r\n    noAuthNeeded(path) {\r\n        let allowed = [ '/login' ];\r\n        if (allowed.includes(path)) return true;\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default Auth;","// react\r\nimport React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state =  {\r\n            user: {\r\n                username: \"\",\r\n                password: \"\",\r\n                remember: true\r\n            },\r\n            message: \"\"\r\n        }\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        window._auth.login(this.state.user,\r\n            () => {\r\n                this.setState({ message: \"\" });\r\n                this.props.history.push(\"/\");\r\n            },\r\n            (message) => {\r\n                this.setState({ message });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let target = event.target;\r\n        if (target instanceof HTMLInputElement) {\r\n            const field = target.id;\r\n            const value = target.type === 'checkbox' ? target.checked : target.value;\r\n            // update\r\n            this.setState(prev_state => {\r\n                prev_state.user[field] = value;\r\n                return prev_state;\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"padding-15\">\r\n\r\n                <div className=\"login-box\">\r\n\r\n                    <form className=\"sky-form boxed\" onSubmit={this.handleSubmit}>\r\n                        <header><i className=\"fa fa-users\"></i> Prijava</header>\r\n\r\n                        {/*\r\n                        <div className=\"alert alert-danger noborder text-center weight-400 nomargin noradius\">\r\n                            Invalid Email or Password!\r\n                        </div>\r\n\r\n                        <div className=\"alert alert-warning noborder text-center weight-400 nomargin noradius\">\r\n                            Account Inactive!\r\n                        </div>\r\n\r\n                        <div className=\"alert alert-default noborder text-center weight-400 nomargin noradius\">\r\n                            <strong>Too many failures!</strong> <br />\r\n                            Please wait: <span className=\"inlineCountdown\" data-seconds=\"180\"></span>\r\n                        </div>\r\n                        */}\r\n\r\n                        <fieldset>\r\n\r\n                            <section>\r\n                                <label className=\"label\">Uporabniško ime</label>\r\n                                <label className=\"input\">\r\n                                    <i className=\"icon-append fa fa-user\"></i>\r\n                                    <input type=\"text\" id=\"username\" value={this.state.user.username} onChange={this.handleChange} />\r\n                                    <span className=\"tooltip tooltip-top-right\">Vpiši uporabniško ime</span>\r\n                                </label>\r\n                            </section>\r\n\r\n                            <section>\r\n                                <label className=\"label\">Geslo</label>\r\n                                <label className=\"input\">\r\n                                    <i className=\"icon-append fa fa-lock\"></i>\r\n                                    <input type=\"password\" id=\"password\" value={this.state.user.password } onChange={this.handleChange} />\r\n                                    <b className=\"tooltip tooltip-top-right\">Vpiši geslo</b>\r\n                                </label>\r\n                                <label className=\"checkbox\">\r\n                                    <input type=\"checkbox\" id=\"remember\"\r\n                                        checked={this.state.user.remember}\r\n                                        onChange={this.handleChange}  />\r\n                                        <i></i>Permanentna prijava\r\n                                </label>\r\n                            </section>\r\n\r\n                        </fieldset>\r\n\r\n                        <footer>\r\n                            <button type=\"submit\" className=\"btn btn-primary pull-right\">Prijava</button>\r\n                            <div className=\"forgot-password pull-left\">\r\n                                { /* <a href=\"page-password.html\">Forgot password?</a> <br /> */ }\r\n                            </div>\r\n                        </footer>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","// react\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// subcomponents\r\n\r\n// data models\r\n\r\n/**\r\n * Title component.\r\n */\r\nclass Title extends Component {\r\n    constructor(props, state) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            breadcrumb: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let links = JSON.parse(this.props.links);\r\n        return (\r\n            <header id=\"page-header\">\r\n                <h1>{this.props.name}</h1>\r\n                <ol className=\"breadcrumb\">\r\n                    {links.map(function (object, i) {\r\n                        if (\"url\" in object) {\r\n                            return <li key={i}><Link to={object.url}>{object.name}</Link></li>;\r\n                        };\r\n                        return <li key={i} className=\"active\">{object.name}</li>\r\n                    })}\r\n                </ol>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;","// react\r\nimport React, { Component } from 'react';\r\n\r\n// subcomponents\r\n\r\n// data models\r\n\r\n// type definitions\r\n\r\n\r\n/**\r\n * Install component.\r\n */\r\nclass Template extends Component {\r\n    constructor(props, state) {\r\n        super(props);\r\n\r\n        this.state =  {\r\n            installed: props.data.installed\r\n        };\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.installed);\r\n        let title = this.props.data.config ? this.props.data.config.name : \"\";\r\n        let description = this.props.data.config ? this.props.data.config.description : \"\";\r\n        if (description === \"\") description = \"No description available ...\";\r\n\r\n        return (\r\n            <div id=\"panel-misc-portlet-r8\" className=\"panel panel-default\">\r\n\r\n                <div className=\"panel-heading\">\r\n\r\n                    <span className=\"elipsis\">{/* panel title */}\r\n                        <strong>{title} ({ this.props.data.name })</strong>\r\n                    </span>\r\n\r\n                    {/* right options */}\r\n                    <ul className=\"options pull-right relative list-unstyled\">\r\n                        <li>\r\n                            <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\"><span className={ this.state.installed ? \"label label-success\" : \"label label-danger\" }>Status <span className=\"caret\"></span></span></a>\r\n                            <ul className=\"dropdown-menu pull-right\" role=\"menu\">\r\n                                <li><a data-portlet=\"color_status_switch\" data-action=\"path_to_chat.php?status=online\" data-method=\"GET\" href=\"#label-success\"><i className=\"fa fa-dot-circle-o color-green\"></i> Install</a></li>\r\n                                <li><a data-portlet=\"color_status_switch\" data-action=\"path_to_chat.php?status=busy\" data-method=\"GET\" href=\"#label-danger\"><i className=\"fa fa-dot-circle-o color-red\"></i> Broken</a></li>\r\n                                <li><a data-portlet=\"color_status_switch\" data-action=\"path_to_chat.php?status=away\" data-method=\"GET\" href=\"#label-warning\"><i className=\"fa fa-dot-circle-o color-yellow\"></i> Detach</a></li>\r\n                                <li><a data-portlet=\"color_status_switch\" data-action=\"path_to_chat.php?status=offline\" data-method=\"GET\" href=\"#label-disabled\"><i className=\"fa fa-dot-circle-o color-gray\"></i> Uninstall</a></li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                    {/* /right options */}\r\n\r\n                </div>\r\n\r\n                {/* panel content */}\r\n                <div className=\"panel-body\">\r\n                    <p>{description}</p>\r\n                    <b>Integrity:</b>&nbsp;\r\n                    <span className={ this.props.data.integrity.create ? \"label label-success\" : \"label label-danger\" }>Create</span>&nbsp;\r\n                    <span className={ this.props.data.integrity.destroy ? \"label label-success\" : \"label label-danger\" }>Destroy</span>&nbsp;\r\n                    <span className={ this.props.data.integrity.data ? \"label label-success\" : \"label label-danger\" }>Initial data</span>&nbsp;\r\n                    <span className={ this.props.data.integrity.config ? \"label label-success\" : \"label label-danger\" }>Admin config</span>\r\n\r\n                </div>\r\n                {/* /panel content */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Template;","// react\r\nimport React, { Component } from 'react';\r\n\r\n// subcomponents\r\nimport Title from './Title';\r\nimport Module from './Module';\r\n\r\n// data models\r\n\r\n/**\r\n * Install component.\r\n */\r\nclass Install extends Component {\r\n    constructor(props, state) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    handleChange() {\r\n        //\r\n    }\r\n\r\n    render() {\r\n        let links = [\r\n            { name: \"Dashboard\", url: \"/\" },\r\n            { name: \"Installation\" }\r\n        ];\r\n\r\n        // console.log(this.state.data);\r\n        console.log(\"Props\", this.props.config);\r\n        return(\r\n            <div>\r\n                <Title name=\"Install Modules\" links={JSON.stringify(links)} />\r\n\r\n                {/* -- /page title -- */}\r\n                <div id=\"content\" className=\"padding-20\">\r\n\r\n                    {this.props.config.map((el, i) => {\r\n                        return <Module key={i} data={el} />\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Install;","// react\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Menu extends Component {\r\n\r\n    componentDidUpdate() {\r\n        window._aside();\r\n    }\r\n\r\n    render() {\r\n\r\n        // transverse through config\r\n        let modules = this.props.config.map((el, i) => {\r\n            let title = el.name;\r\n            if (\"config\" in el) {\r\n                title = el.config.name;\r\n            }\r\n\r\n            let link_list = \"/list/\" + el.name;\r\n            let link_add = \"/add/\" + el.name;\r\n\r\n            return (\r\n                <li key={i}>\r\n                    <Link to=\"#\">\r\n                        <i className=\"fa fa-menu-arrow pull-right\"></i>\r\n                        <i className=\"main-icon fa fa-book\"></i> <span>{title}</span>\r\n                    </Link>\r\n                    <ul>\r\n                        <li><Link to={link_list}>List</Link></li>\r\n                        <li><Link to={link_add}>Add</Link></li>\r\n                    </ul>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return(\r\n            <aside id=\"aside\">\r\n            <nav id=\"sideNav\">\r\n                <ul className=\"nav nav-list\">\r\n                    <li className=\"active\">\r\n                        <Link className=\"dashboard\" to=\"/\">\r\n                            <i className=\"main-icon fa fa-dashboard\"></i> <span>Dashboard</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"#\">\r\n                            <i className=\"fa fa-menu-arrow pull-right\"></i>\r\n                            <i className=\"main-icon fa fa-book\"></i> <span>Pages</span>\r\n                        </Link>\r\n                        <ul>\r\n                            <li><a href=\"page-invoice.html\">Invoice</a></li>\r\n                            <li><a href=\"page-login.html\">Login</a></li>\r\n                        </ul>\r\n                    </li>\r\n                    {modules}\r\n                </ul>\r\n\r\n                <h3>MORE</h3>\r\n                <ul className=\"nav nav-list\">\r\n                    <li>\r\n                        <Link to=\"/install\">\r\n                            <i className=\"main-icon fa fa-gears\"></i>\r\n                            {/* <span className=\"label label-warning pull-right\">0</span> */} <span>Install</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/settings\">\r\n                            <i className=\"main-icon fa fa-code\"></i>\r\n                            {/*<span className=\"label label-danger pull-right\">PRO</span>*/} <span>Settings</span>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n            </nav>\r\n\r\n            <span id=\"asidebg\"></span>\r\n        </aside>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","// react\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// subcomponents\r\n\r\n// data models\r\n\r\n/**\r\n * User menu in the header.\r\n */\r\nclass HeaderUser extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            name: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user = JSON.parse(localStorage.getItem(\"user\"));\r\n        if (user != null) {\r\n            this.setState({name: user[\"name\"]});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <nav>\r\n\r\n                {/* OPTIONS LIST */}\r\n                <ul className=\"nav pull-right\">\r\n\r\n                    {/* USER OPTIONS */}\r\n                    <li className=\"dropdown pull-left\">\r\n                        <Link to=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\" data-hover=\"dropdown\" data-close-others=\"true\">\r\n                            <img className=\"user-avatar\" alt=\"\" src=\"assets/images/noavatar.jpg\" height=\"34\" />\r\n                            <span className=\"user-name\">\r\n                                <span className=\"hidden-xs\">\r\n                                    {this.state.name} <i className=\"fa fa-angle-down\"></i>\r\n                                </span>\r\n                            </span>\r\n                        </Link>\r\n                        <ul className=\"dropdown-menu hold-on-click\">\r\n                            <li>{/* settings */}\r\n                                <Link to=\"/settings\" className=\"test\"><i className=\"fa fa-cogs\"></i> Settings</Link>\r\n                            </li>\r\n\r\n                            <li className=\"divider\"></li>\r\n                            <li>{/* logout */}\r\n                                <Link to=\"/logout\"><i className=\"fa fa-power-off\"></i> Log Out</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    {/* /USER OPTIONS */}\r\n\r\n                </ul>\r\n                {/* /OPTIONS LIST */}\r\n\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderUser;","// react\r\nimport React, { Component } from 'react';\r\n\r\n// subcomponents\r\nimport HeaderUser from './HeaderUser';\r\n// data models\r\n\r\n// type definitions\r\n\r\n/**\r\n * Install component.\r\n */\r\n\r\nclass HeaderTop extends Component {\r\n    render() {\r\n        return(\r\n            <header id=\"header\">\r\n\r\n                {/* Mobile Button */}\r\n                <button id=\"mobileMenuBtn\"></button>\r\n\r\n                {/* Logo */}\r\n                <span className=\"logo pull-left\">\r\n                    <img src=\"/assets/images/logo_light.png\" alt=\"admin panel\" height=\"35\" style={{marginTop: \"8px\"}} />\r\n                </span>\r\n                {/*\r\n                <form method=\"get\" action=\"page-search.html\" className=\"search pull-left hidden-xs\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"k\" placeholder=\"Search for something...\" />\r\n                </form>\r\n                */}\r\n\r\n                <HeaderUser />\r\n\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderTop;","// react\r\nimport React, { Component } from 'react';\r\n\r\n// subcomponents\r\n\r\n// data models\r\n\r\n// type definitions\r\n\r\n\r\n/**\r\n * Install component.\r\n */\r\nclass Text extends Component {\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        let name = this.props.name;\r\n        let description = this.props.description;\r\n        if (description === undefined) {\r\n            description = name;\r\n        };\r\n        let value = this.props.value;\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"form-group\">\r\n                    <div className=\"col-md-12 col-sm-12\">\r\n                        <label>{description}</label>\r\n                        <input type=\"text\" className=\"form-control\" name={name} id={name} value={value} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Text;","// react\r\nimport React, { Component } from 'react';\r\n\r\n// subcomponents\r\n\r\n// data models\r\n\r\n// type definitions\r\n\r\n\r\n/**\r\n * Install component.\r\n */\r\nclass Textarea extends Component {\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        let name = this.props.name;\r\n        let description = this.props.description;\r\n        if (description === undefined) {\r\n            description = name;\r\n        };\r\n        let value = this.props.value;\r\n\r\n        let textareaClass = \"form-control\";\r\n\r\n        if ((\"type\" in this.props) && (this.props.type === \"summernote\")) {\r\n            textareaClass = \"form-control summernote\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"form-group\">\r\n                    <div className=\"col-md-12 col-sm-12\">\r\n                        <label>{description}</label>\r\n                        <textarea name=\"content\" rows=\"10\" className={textareaClass} data-height=\"300\" data-lang=\"en-US\"></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Textarea;","// react\r\nimport React, { Component } from 'react';\r\n\r\n// subcomponents\r\nimport Text from './form/Text';\r\nimport Textarea from './form/Textarea';\r\n\r\n// data models\r\n\r\n// type definitions\r\n\r\n\r\n/**\r\n * Install component.\r\n */\r\nclass Fields extends Component {\r\n\r\n    // rendering template specific calls after rendering of the component\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        window._editors();\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.fields);\r\n\r\n        let fields = this.props.fields.map((el, i) => {\r\n            if (el.type === \"text\") {\r\n                return (\r\n                    <Text name={el.name} value={el.value} description={el.description} key={i} />\r\n                )\r\n            } else if (el.type === \"textarea\") {\r\n                return (\r\n                    <Textarea name={el.name} value={el.value} description={el.description} key={i} />\r\n                )\r\n            } else if (el.type === \"richtextarea\") {\r\n                return (\r\n                    <Textarea name={el.name} value={el.value} description={el.description} type=\"summernote\" key={i} />\r\n                )\r\n            }\r\n        });\r\n\r\n        return (\r\n            <fieldset>\r\n                <div className=\"panel panel-default\">\r\n                    <div className=\"panel-body\">\r\n                        {fields}\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Fields;","class RutkaUtils {\r\n\r\n    static moduleId(props) {\r\n        return props.match.params.id;\r\n    };\r\n\r\n    static getRecordI(json, name, value) {\r\n        for (let i = 0; i < json.length; i++) {\r\n            if (json[i][name] === value) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    static moduleTitle(config, name) {\r\n        let title = name;\r\n\r\n        for (let i = 0; i < config.length; i++) {\r\n            let el = config[i];\r\n            if (el.name === name) {\r\n                if (\"config\" in el) {\r\n                    title = el.config.name;\r\n                }\r\n            }\r\n        };\r\n\r\n        return title;\r\n    };\r\n\r\n    static moduleConfig(config, name) {\r\n        let i = this.getRecordI(config, \"name\", name);\r\n\r\n        if (i !== -1) {\r\n            return config[i].config;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default RutkaUtils;","// react\r\nimport React, { Component } from 'react';\r\n\r\n// subcomponents\r\nimport Title from './Title';\r\nimport Fields from './Fields';\r\n\r\n// data models\r\n\r\n// type definitions\r\n\r\n// libraries\r\nimport Utils from '../lib/Utils';\r\n\r\n/**\r\n * Install component.\r\n */\r\nclass Add extends Component {\r\n\r\n    render() {\r\n        let module = Utils.moduleId(this.props);\r\n        let title = Utils.moduleTitle(this.props.config, module);\r\n        let config = Utils.moduleConfig(this.props.config, module);\r\n\r\n        // extract fields\r\n        let fields = [];\r\n        if (config != null) {\r\n            fields = config.config[0].fields\r\n        }\r\n\r\n        let links = [\r\n            { name: \"Dashboard\", url: \"/\" },\r\n            { name: title, url: \"/view/\" + module },\r\n            { name: \"Add\" }\r\n        ];\r\n\r\n        let title_name = \"Add Record - \" + title;\r\n\r\n        return(\r\n            <div>\r\n                <Title name={title_name} links={JSON.stringify(links)} />\r\n                <form className=\"validate\" action=\"php/contact.php\" method=\"post\" encType=\"multipart/form-data\" data-success=\"Sent! Thank you!\" data-toastr-position=\"top-right\">\r\n                    <div id=\"content\" className=\"padding-20\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-9 col-sm-12\">\r\n                                <Fields fields={fields} />\r\n                            </div>\r\n                            <div className=\"col-md-3 col-sm-12\">\r\n                                <div className=\"panel panel-default\">\r\n                                    <div className=\"panel-body\">\r\n                                        <input type=\"submit\" className=\"btn btn-3d btn-dirtygreen btn-block\" value=\"Submit\" />\r\n                                        <input type=\"submit\" className=\"btn btn-3d btn-purple btn-block\" value=\"Submit &amp; edit\" />\r\n                                        <input type=\"submit\" className=\"btn btn-3d btn-red btn-block\" value=\"Discard\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Add;","// react\r\nimport React, { Component } from 'react';\r\n\r\n// subcomponents\r\nimport Title from './Title';\r\n\r\n// data models\r\n\r\n// type definitions\r\n\r\n/**\r\n * Install component.\r\n */\r\nclass Dashboard extends Component {\r\n    componentDidMount() {\r\n        window._backend.getTest((data) => {\r\n            console.log(data);\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        let links = [\r\n            { name: \"Dashboard\" }\r\n        ];\r\n\r\n        return(\r\n            <div>\r\n                <Title name=\"Dashboard\" links={JSON.stringify(links)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","// react\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// subcomponents\r\n\r\n// data models\r\n\r\n// type definitions\r\n\r\n/**\r\n * Install component.\r\n */\r\nclass Install extends Component {\r\n    render() {\r\n        localStorage.removeItem(\"user\");\r\n        return(\r\n            <Redirect to=\"/\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Install;","// react\r\nimport React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n// subcomponents\r\nimport Install from './Install';\r\nimport Menu from './Menu';\r\nimport HeaderTop from './HeaderTop';\r\nimport Add from './Add';\r\n\r\nimport Dashboard from './Dashboard';\r\nimport Logout from './Logout';\r\n\r\n// data models\r\nimport Backend from '../lib/Backend';\r\n\r\n// type definitions\r\n\r\n// backend and authorization class instantiation to global variables\r\nwindow._backend = new Backend(\"http://192.168.99.100/api\");\r\n\r\n/**\r\n * Main app container.\r\n */\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            config: []\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load configuration.\r\n     */\r\n    componentDidMount() {\r\n        window._backend.getModules((data) => {\r\n            this.setState({\r\n                config: data\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"wrapper\">\r\n                <Menu config={this.state.config} />\r\n                <HeaderTop config={this.state.config} />\r\n                <section id=\"middle\">\r\n                    {[\r\n                        <Route path=\"/\" exact={true} component={Dashboard} key=\"1\" />,\r\n                        <Route path=\"/logout\" exact={true} component={Logout} key=\"3\" />,\r\n                        <Route path=\"/install\" exact={true} render={(props) => <Install {...props} config={this.state.config} /> } key=\"4\" />,\r\n\r\n                        <Route path=\"/add/:id\" exact={true} render={(props) => <Add {...props} config={this.state.config} />} key=\"5\" />,\r\n                        <Route path=\"/list/:id\" exact={true} component={Add} key=\"6\" />\r\n                    ]}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// react imports\r\nimport React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// lib import\r\nimport Backend from './lib/Backend';\r\nimport Auth from './lib/Auth';\r\n\r\n// components\r\n\r\nimport Login from './components/Login';\r\nimport App from './components/App';\r\n\r\nimport './App.css';\r\n\r\n// backend and authorization class instantiation to global variables\r\nwindow._backend = new Backend(\"/api\");\r\nwindow._auth = new Auth();\r\n\r\nclass AppJS extends Component {\r\n    render() {\r\n        // get current path\r\n\r\n        // auth\r\n        if (window._auth.isAuth()) {\r\n            return (\r\n                <App />\r\n            );\r\n        } else if (window._auth.noAuthNeeded(this.props.location.pathname)) {\r\n            return (\r\n                [\r\n                    <Route path=\"/login\" exact={true} component={Login} key=\"2\" />\r\n                ]\r\n            );\r\n        } else {\r\n            return(<Redirect to=\"/login\" />)\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppJS;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Router basename={'/admin'}>\r\n        <Route path='/' component={App} key=\"0\" />\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}